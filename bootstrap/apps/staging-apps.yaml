apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: staging-apps
  namespace: argocd
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          # list all team names
          - git:
              repoURL: git@github.com:lowc1012/argo-lab.git
              revision: HEAD
              pathParamPrefix: team
              directories:
                - path: "apps/*"

          # list all application config file under the <team> and staging environment
          - git:
              repoURL: git@github.com:lowc1012/argo-lab.git
              revision: HEAD
              files:
                - path: "apps/{{.team.path.basenameNormalized}}/staging/**/config.yaml"
              pathParamPrefix: config

  templatePatch: |
    {{- $channels := . | dig "notification" "slack" "channels" "" | join ";" -}}
    metadata:
      annotations:
        {{$channels}}
        {{- if $channels }}
        notifications.argoproj.io/subscribe.on-sync-running.slack: {{$channels}}
        notifications.argoproj.io/subscribe.on-sync-failed.slack: {{$channels}}
        notifications.argoproj.io/subscribe.on-deployed.slack: {{$channels}}
        {{- end }}

    {{- if hasKey . "helmChart" }}
    spec:
      sources:
        - repoURL: {{ .helmChart.repoURL }}
          path: charts/{{ .helmChart.name }}
          targetRevision: {{ .helmChart.version }}
          helm:
            releaseName: {{.appName}}
            {{- $configDir := .config.path.path -}}
            {{- with .helmChart.valueFiles }}
            valueFiles:
              {{- range $valueFile := . }}
              - $values/{{$configDir}}/{{$valueFile}}
              {{- end }}
            {{- end }}

        - repoURL: git@github.com:lowc1012/argo-lab.git
          targetRevision: HEAD
          ref: values
    {{- else }}
    spec:
      source:
        repoURL: git@github.com:lowc1012/argo-lab.git
        path: '{{.config.path.path}}'
        targetRevision: HEAD
    {{- end }}

  template:
    metadata:
      name: "{{.cluster.name}}-{{.team.path.basenameNormalized}}-{{.appName}}"
      labels:
        team: "{{.team.path.basenameNormalized}}"
    spec:
      project: "{{.team.path.basenameNormalized}}"
      destination:
        name: "{{.cluster.name}}"
        namespace: "{{.cluster.namespace}}"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 1m
          limit: 100
