apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: staging-apps
  namespace: argocd
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          # list all team names
          - git:
              repoURL: git@github.com:lowc1012/argo-lab.git
              revision: HEAD
              directories:
                - path: "apps/*"
              pathParamPrefix: team

          - merge:
              mergeKeys:
                - server
              generators:
                # list all application config file under the <team> and staging environment
                - git:
                    repoURL: git@github.com:lowc1012/argo-lab.git
                    revision: HEAD
                    files:
                      - path: "apps/{{.team.path.basenameNormalized}}/staging/**/config.yaml"
                    pathParamPrefix: config
                # list all staging clusters 
                - clusters:
                    selector:
                      matchLabels:
                        env: staging

  templatePatch: |
    {{- if hasKey . "helmChart" }}
    spec:
      sources:
        - repoURL: {{ .helmChart.repoURL }}
          path: charts/{{ .helmChart.name }}
          targetRevision: {{ .helmChart.version }}
          helm:
            valueFiles:
              - $values/{{ .config.path.path }}/values.yaml
            parameters:
              - name: podAnnotations.test
                value: '{{ index .metadata.annotations "aws/accountId" }}'

        - repoURL: git@github.com:lowc1012/argo-lab.git
          targetRevision: HEAD
          ref: values
    {{- else }}
    spec:
      source:
        repoURL: git@github.com:lowc1012/argo-lab.git
        path: '{{.config.path.path}}'
        targetRevision: HEAD
    {{- end }}

  template:
    metadata:
      name: "{{.name}}-{{.team.path.basenameNormalized}}-{{.appName}}"
      labels:
        team: "{{.team.path.basenameNormalized}}"
    spec:
      project: "{{.team.path.basenameNormalized}}"
      destination:
        server: "{{.server}}"
        namespace: "{{.namespace}}"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 1m
          limit: 100
