apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: staging-apps
  namespace: argocd
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - git:
              repoURL: git@github.com:lowc1012/argo-lab.git
              revision: HEAD
              directories:
                - path: "apps/*"
              pathParamPrefix: team
          - git:
              repoURL: git@github.com:lowc1012/argo-lab.git
              revision: HEAD
              files:
                - path: "apps/{{.team.path.basenameNormalized}}/staging/**/config.yaml"
              pathParamPrefix: config

  templatePatch: |
    {{- if eq .type "helm" }}
    spec:
      sources:
        - repoURL: git@github.com:lowc1012/argo-lab.git
          targetRevision: HEAD
          ref: values
        - repoURL: {{ .helmChart.repoURL }}
          path: charts/{{ .helmChart.name }}
          targetRevision: {{ .helmChart.version }}
          helm:
            valueFiles:
              - $values/{{ .config.path.path }}/values.yaml
    {{- else }}
    spec:
      source:
        repoURL: git@github.com:lowc1012/argo-lab.git
        path: '{{.config.path.path}}'
        targetRevision: HEAD
        kustomize:
          namespace: '{{.namespace}}'
    {{- end }}

  template:
    metadata:
      name: "{{.cluster.name}}-{{.team.path.basenameNormalized}}-{{.appName}}"
      labels:
        team: "{{.values.team}}"
    spec:
      project: "{{.values.team}}"
      destination:
        name: "{{.cluster.name}}"
        namespace: "{{.namespace}}"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 1m
          limit: 100
